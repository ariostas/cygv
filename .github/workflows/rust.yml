name: Rust CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  CARGO_TERM_COLOR: always

jobs:
  build-and-test:
    name: Build and test
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-13, macos-14, windows-latest]
    defaults:
      run:
        shell: ${{ matrix.os == 'windows-latest' && 'msys2 {0}' || 'bash' }}
    steps:
      - name: Set up MSYS2
        if: runner.os == 'Windows'
        uses: msys2/setup-msys2@v2
        with:
          msystem: UCRT64
          update: true
          path-type: inherit
          install: >-
            mingw-w64-ucrt-x86_64-python
            mingw-w64-ucrt-x86_64-rust
            mingw-w64-ucrt-x86_64-gcc
            diffutils
            m4
            make
            git
            curl
      - name: Check out repo
        uses: actions/checkout@v4
      - name: Build
        run: cargo build --verbose
      - name: Run tests
        run: cargo test --verbose

  check-rust:
    name: Check Rust
    if: always()
    needs: [build-and-test]
    runs-on: ubuntu-latest
    timeout-minutes: 2
    steps:
      - name: Decide whether the needed jobs succeeded or failed
        uses: re-actors/alls-green@release/v1
        with:
          jobs: ${{ toJSON(needs) }}
